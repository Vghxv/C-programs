016 大數除法

輸入說明：
輸入兩行20~40位數(包含上下限)的正整數做除法運算
第一行為被除數，第二行為除數

輸出說明：
輸出除法運算後的商數(測資不一定皆可整除)
=================
範例輸入說明：
1000000000000000000000005
10000000000000000000

範例輸出說明：
100000 (餘5但僅需輸出商數)
=================
sample input 1：
10000000000000000000
10000000000000000000

sample output 1：
1
=================
sample input 2：
1000000000000000000000000000000000000000
1000000000000000000000000000000000000000

sample output 2：
1
=================
sample input 3：
9999999999999999999999999999999999999999
9999999999999999999999999999999999999999

sample output 3：
1
=================
sample input 4：
50000000000000000000
10000000000000000000

sample output 4：
5
=================
sample input 5：
90348905290835683096
22587226322708920774

sample output 5：
4
=================
sample input 6：
9999999999999999999999999999999999999999
3333333333333333333333333333333333333333

sample output 6：
3
=================
sample input 7：
6322083025804530270923509282757380346975
1264416605160906054184701856551476069395

sample output 7：
5
=================
sample input 8：
3249872592333552350955555576
41137627751057624695639944

sample output 8：
79
=================
sample input 9：
82314783420550387123
52309850272053572532

sample output 9：
1
=================
sample input 10：
141234234353456436392
21497181748250274194

sample output 10：
6
=================
sample input 11：
54564582314783420550387123
52309850272053572532

sample output 11：
1043103
=================
sample input 12：
92342348902526234023433342
46320495364434430538

sample output 12：
1993552
=================
sample input 13：
4120428120421421849024945203957209002335
3120348124073598237483590782984678922344

sample output 13：
1
=================
sample input 14：
8487528979174018417498589236759279346745
1912490723489072389729385792835792371975

sample output 14：
4
=================
sample input 15：
1230947809145820375820342304872398432759
112274598732598726162189471982466124

sample output 15：
10963
=================
sample input 16：
7483579872987295872027089725982395823255
3749189247891277821664786328746278

sample output 16：
1996052
=================
sample input 17：
90000001421400000002000013300
12000124000045600005

sample output 17：
7499922619
=================
sample input 18：
9000000124000000460000000002400056000003
302113000000053000070070070200002040

sample output 18：
29790

void div(int *arr1,int *arr2,int *ans){
	int i,j;
	int tenpower[BSIZE];
    int temp[BSIZE];
    int t[BSIZE];
	memset(tenpower,0,BSIZE*sizeof(int));
	for(i=BSIZE/2;i>-1;i--){
		for(j=9;j>-1;j--){
			memset(t,0,BSIZE*sizeof(int));
			memset(temp,0,BSIZE*sizeof(int));
			t[0]=j;
			tenpower[i]=1;

			mul(arr2,t,temp);
			memset(t,0,BSIZE*sizeof(int));
			mul(tenpower,temp,t);

			tenpower[i]=0;
			if(j==0){
				ans[i]=0;
			}
			else if(jgsize(arr1,t)<=0){
				sub(arr1,t,arr1);
				ans[i]=j;
				break;
			}
		}
	}
}
void div(int *a,int *b,int *c){
	int i,j;
	int tem[BSIZE];
	memset(tem,0,BSIZE*sizeof(int));
	for(i=40;i>=0;i--){
		for(j=9;j>=0;j--){
			int tem2[BSIZE];
			memset(tem2,0,BSIZE*sizeof(int));
			int tem3[BSIZE];
			memset(tem3,0,BSIZE*sizeof(int));
			tem2[0]=j;
			tem[i]=1;
			mul(b,tem2,tem3);
			memset(tem2,0,BSIZE*sizeof(int));
			mul(tem,tem3,tem2);
			tem[i]=0;
			if(j==0){
				c[i]=0;
			}
			else if(jgsize(a,tem2)<=0){
				sub(a,tem2,a);
				c[i]=j;
				break;
			}
		}
	}
}
